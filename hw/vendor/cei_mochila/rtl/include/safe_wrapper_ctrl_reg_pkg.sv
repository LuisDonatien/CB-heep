// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package safe_wrapper_ctrl_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 3;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic        q;
  } safe_wrapper_ctrl_reg2hw_core0sync_reg_t;

  typedef struct packed {
    logic        q;
  } safe_wrapper_ctrl_reg2hw_core1sync_reg_t;

  // Register -> HW type
  typedef struct packed {
    safe_wrapper_ctrl_reg2hw_core0sync_reg_t core0sync; // [1:1]
    safe_wrapper_ctrl_reg2hw_core1sync_reg_t core1sync; // [0:0]
  } safe_wrapper_ctrl_reg2hw_t;

  // Register offsets
  parameter logic [BlockAw-1:0] SAFE_WRAPPER_CTRL_CORE0SYNC_OFFSET = 3'h 0;
  parameter logic [BlockAw-1:0] SAFE_WRAPPER_CTRL_CORE1SYNC_OFFSET = 3'h 4;

  // Register index
  typedef enum int {
    SAFE_WRAPPER_CTRL_CORE0SYNC,
    SAFE_WRAPPER_CTRL_CORE1SYNC
  } safe_wrapper_ctrl_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] SAFE_WRAPPER_CTRL_PERMIT [2] = '{
    4'b 0001, // index[0] SAFE_WRAPPER_CTRL_CORE0SYNC
    4'b 0001  // index[1] SAFE_WRAPPER_CTRL_CORE1SYNC
  };

endpackage

