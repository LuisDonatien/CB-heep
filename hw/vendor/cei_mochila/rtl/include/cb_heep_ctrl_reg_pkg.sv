// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package cb_heep_ctrl_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 3;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic        q;
  } cb_heep_ctrl_reg2hw_exit_loop_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } cb_heep_ctrl_hw2reg_exit_loop_reg_t;

  // Register -> HW type
  typedef struct packed {
    cb_heep_ctrl_reg2hw_exit_loop_reg_t exit_loop; // [0:0]
  } cb_heep_ctrl_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    cb_heep_ctrl_hw2reg_exit_loop_reg_t exit_loop; // [1:0]
  } cb_heep_ctrl_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] CB_HEEP_CTRL_EXIT_LOOP_OFFSET = 3'h 0;
  parameter logic [BlockAw-1:0] CB_HEEP_CTRL_BOOT_ADDRESS_OFFSET = 3'h 4;

  // Register index
  typedef enum int {
    CB_HEEP_CTRL_EXIT_LOOP,
    CB_HEEP_CTRL_BOOT_ADDRESS
  } cb_heep_ctrl_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] CB_HEEP_CTRL_PERMIT [2] = '{
    4'b 0001, // index[0] CB_HEEP_CTRL_EXIT_LOOP
    4'b 1111  // index[1] CB_HEEP_CTRL_BOOT_ADDRESS
  };

endpackage

